{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids: [ID!]!) {\\n  nodes(ids: $ids) {\\n    ... on Product {\\n      title\\n      handle\\n      descriptionHtml\\n      id\\n      images(first: 1) {\\n        edges {\\n          node {\\n            originalSrc\\n            altText\\n          }\\n        }\\n      }\\n      variants(first: 1) {\\n        edges {\\n          node {\\n            price\\n            id\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    _classCallCheck(this, ResourceListWithProducts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResourceListWithProducts).apply(this, arguments));\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      var twoWeeksFromNow = new Date(_Date$now() + 12096e5).toDateString();\n      console.log(store.get('ids'));\n      return __jsx(\"div\", null, __jsx(\"p\", null, \" R E S O U R C E \")) // <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n      //   {({ data, loading, error }) => {\n      //     if (loading) return <div>Loading…</div>;\n      //     if (error) return <div>{error.message}</div>;\n      //     console.log(\"data\");\n      //     return (\n      //       <Card>\n      //         <ResourceList\n      //           showHeader\n      //           resourceName={{ singular: 'Product', plural: 'Products' }}\n      //           items={data.nodes}\n      //           renderItem={item => {\n      //             const media = (\n      //               <Thumbnail\n      //                 source={\n      //                   item.images.edges[0]\n      //                     ? item.images.edges[0].node.originalSrc\n      //                     : ''\n      //                 }\n      //                 alt={\n      //                   item.images.edges[0]\n      //                     ? item.images.edges[0].node.altText\n      //                     : ''\n      //                 }\n      //               />\n      //             );\n      //             const price = item.variants.edges[0].node.price;\n      //             return (\n      //               <ResourceList.Item\n      //                 id={item.id}\n      //                 media={media}\n      //                 accessibilityLabel={`View details for ${item.title}`}\n      //                 onClick={() => {\n      //                   store.set('item', item);\n      //                   redirectToProduct();\n      //                 }}\n      //               >\n      //                 <Stack>\n      //                   <Stack.Item fill>\n      //                     <h3>\n      //                       <TextStyle variation=\"strong\">\n      //                         {item.title}\n      //                       </TextStyle>\n      //                     </h3>\n      //                   </Stack.Item>\n      //                   <Stack.Item>\n      //                     <p>${price}</p>\n      //                   </Stack.Item>\n      //                   <Stack.Item>\n      //                     <p>Expires on {twoWeeksFromNow} </p>\n      //                   </Stack.Item>\n      //                 </Stack>\n      //               </ResourceList.Item>\n      //             );\n      //           }}\n      //         />\n      //       </Card>\n      //     );\n      //   }}\n      // </Query>\n      ;\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/kole/fullStack/candu/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","toDateString","console","log","get","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACEC,IADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAGA,IAAMC,kBAAkB,GAAGV,GAAH,mBAAxB;;IA6BMW,wB;;;;;;;;;;;;;6BAIK;AAEP,UAAMC,GAAG,GAAG,KAAKC,OAAjB;;AACA,UAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,YAAMC,QAAQ,GAAGP,QAAQ,CAACQ,MAAT,CAAgBJ,GAAhB,CAAjB;AACAG,QAAAA,QAAQ,CAACE,QAAT,CACET,QAAQ,CAACU,MAAT,CAAgBC,GADlB,EAEE,gBAFF;AAID,OAND;;AAQA,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAAS,cAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,GAAN,CAAU,KAAV,CAAZ;AACA,aACE,mBACE,qCADF,CADF,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DF;AAiED;;;;EAlFoCC,KAAK,CAACC,S;;gBAAvChB,wB,iBAEiBF,O;;AAmFvB,eAAeE,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\n\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!) {\n  nodes(ids: $ids) {\n    ... on Product {\n      title\n      handle\n      descriptionHtml\n      id\n      images(first: 1) {\n        edges {\n          node {\n            originalSrc\n            altText\n          }\n        }\n      }\n      variants(first: 1) {\n        edges {\n          node {\n            price\n            id\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nclass ResourceListWithProducts extends React.Component {\n\n  static contextType = Context;\n\n  render() {\n\n    const app = this.context;\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(\n        Redirect.Action.APP,\n        '/edit-products',\n      );\n    };\n\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    console.log(store.get('ids'))\n    return (\n      <div>\n        <p> R E S O U R C E </p>\n      </div>\n      // <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n      //   {({ data, loading, error }) => {\n      //     if (loading) return <div>Loading…</div>;\n      //     if (error) return <div>{error.message}</div>;\n      //     console.log(\"data\");\n      //     return (\n      //       <Card>\n      //         <ResourceList\n      //           showHeader\n      //           resourceName={{ singular: 'Product', plural: 'Products' }}\n      //           items={data.nodes}\n      //           renderItem={item => {\n      //             const media = (\n      //               <Thumbnail\n      //                 source={\n      //                   item.images.edges[0]\n      //                     ? item.images.edges[0].node.originalSrc\n      //                     : ''\n      //                 }\n      //                 alt={\n      //                   item.images.edges[0]\n      //                     ? item.images.edges[0].node.altText\n      //                     : ''\n      //                 }\n      //               />\n      //             );\n      //             const price = item.variants.edges[0].node.price;\n      //             return (\n      //               <ResourceList.Item\n      //                 id={item.id}\n      //                 media={media}\n      //                 accessibilityLabel={`View details for ${item.title}`}\n      //                 onClick={() => {\n      //                   store.set('item', item);\n      //                   redirectToProduct();\n      //                 }}\n      //               >\n      //                 <Stack>\n      //                   <Stack.Item fill>\n      //                     <h3>\n      //                       <TextStyle variation=\"strong\">\n      //                         {item.title}\n      //                       </TextStyle>\n      //                     </h3>\n      //                   </Stack.Item>\n      //                   <Stack.Item>\n      //                     <p>${price}</p>\n      //                   </Stack.Item>\n      //                   <Stack.Item>\n      //                     <p>Expires on {twoWeeksFromNow} </p>\n      //                   </Stack.Item>\n      //                 </Stack>\n      //               </ResourceList.Item>\n      //             );\n      //           }}\n      //         />\n      //       </Card>\n      //     );\n      //   }}\n      // </Query>\n    );\n  }\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}