{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setWeight as _setWeight, setCalories as _setCalories, setTotalFat as _setTotalFat, setSaturatedFat as _setSaturatedFat, setCholesterol as _setCholesterol, setTransFat as _setTransFat, setSodium as _setSodium, setCarbohydrate as _setCarbohydrate, setFiber as _setFiber, setSugars as _setSugars, setAddedSugars as _setAddedSugars, setProtein as _setProtein, setA as _setA, setC as _setC, setD as _setD, setCalcium as _setCalcium, setIron as _setIron, setPotassium as _setPotassium } from '../redux/ActionCreator';\n\n__jsx(Button, null, \"Add product\");\n\nimport { TextField, FormLayout, Form } from '@shopify/polaris';\nimport { bindActionCreators } from \"redux\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    Weight: state.inputReducer.Weight,\n    Calories: state.inputReducer.Calories,\n    TotalFat: state.inputReducer.TotalFat,\n    SaturatedFat: state.inputReducer.SaturatedFat,\n    TransFat: state.inputReducer.TransFat,\n    Cholesterol: state.inputReducer.Cholesterol,\n    Sodium: state.inputReducer.Sodium,\n    Carbohydrate: state.inputReducer.Carbohydrate,\n    Fiber: state.inputReducer.Fiber,\n    Sugars: state.inputReducer.Sugars,\n    AddedSugars: state.inputReducer.AddedSugars,\n    Protein: state.inputReducer.Protein,\n    A: state.inputReducer.A,\n    C: state.inputReducer.C,\n    D: state.inputReducer.D,\n    Calcium: state.inputReducer.Calcium,\n    Iron: state.inputReducer.Iron,\n    Potassium: state.inputReducer.Potassium\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setWeight: function setWeight(event) {\n      return dispatch(_setWeight(event));\n    },\n    setCalories: function setCalories(event) {\n      return dispatch(_setCalories(event));\n    },\n    setTotalFat: function setTotalFat(event) {\n      return dispatch(_setTotalFat(event));\n    },\n    setSaturatedFat: function setSaturatedFat(event) {\n      return dispatch(_setSaturatedFat(event));\n    },\n    setTransFat: function setTransFat(event) {\n      return dispatch(_setTransFat(event));\n    },\n    setCholesterol: function setCholesterol(event) {\n      return dispatch(_setCholesterol(event));\n    },\n    setSodium: function setSodium(event) {\n      return dispatch(_setSodium(event));\n    },\n    setCarbohydrate: function setCarbohydrate(event) {\n      return dispatch(_setCarbohydrate(event));\n    },\n    setFiber: function setFiber(event) {\n      return dispatch(_setFiber(event));\n    },\n    setSugars: function setSugars(event) {\n      return dispatch(_setSugars(event));\n    },\n    setAddedSugars: function setAddedSugars(event) {\n      return dispatch(_setAddedSugars(event));\n    },\n    setProtein: function setProtein(event) {\n      return dispatch(_setProtein(event));\n    },\n    setA: function setA(event) {\n      return dispatch(_setA(event));\n    },\n    setC: function setC(event) {\n      return dispatch(_setC(event));\n    },\n    setD: function setD(event) {\n      return dispatch(_setD(event));\n    },\n    setCalcium: function setCalcium(event) {\n      return dispatch(_setCalcium(event));\n    },\n    setIron: function setIron(event) {\n      return dispatch(_setIron(event));\n    },\n    setPotassium: function setPotassium(event) {\n      return dispatch(_setPotassium(event));\n    }\n  }, dispatch);\n};\n\nvar Inputbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inputbox, _Component);\n\n  function Inputbox(props) {\n    _classCallCheck(this, Inputbox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Inputbox).call(this, props));\n  }\n\n  _createClass(Inputbox, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(FormLayout, {\n        title: \"Vue Nutrition Label\"\n      }, __jsx(FormLayout.Group, null, __jsx(\"p\", null, __jsx(\"label\", null, \"Serving Weight\"), __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setWeight,\n        placeholder: this.props.Weight,\n        value: this.props.Weight,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Calories\"), __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setCalories,\n        placeholder: this.props.Calories,\n        value: this.props.Calories,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Total Fat\"), __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setTotalFat,\n        placeholder: this.props.TotalFat,\n        value: this.props.TotalFat,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Saturated Fat\"), __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setSaturatedFat,\n        placeholder: this.props.SaturatedFat,\n        value: this.props.SaturatedFat,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Trans Fat\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setTransFat,\n        placeholder: this.props.TransFat,\n        value: this.props.TransFat,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Cholesterol\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setCholesterol,\n        placeholder: this.props.Cholesterol,\n        value: this.props.Cholesterol,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Sodium\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setSodium,\n        placeholder: this.props.Sodium,\n        value: this.props.Sodium,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Carbohydrate\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setCarbohydrate,\n        placeholder: this.props.Carbohydrate,\n        value: this.props.Carbohydrate,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Fiber\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setFiber,\n        placeholder: this.props.Fiber,\n        value: this.props.Fiber,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Sugars\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setSugars,\n        placeholder: this.props.Sugars,\n        value: this.props.Sugars,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Added Sugars\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setAddedSugars,\n        placeholder: this.props.AddedSugars,\n        value: this.props.AddedSugars,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Protein\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setProtein,\n        placeholder: this.props.Protein,\n        value: this.props.Protein,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin A\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setA,\n        placeholder: this.props.A,\n        value: this.props.A,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin C\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setC,\n        placeholder: this.props.C,\n        value: this.props.C,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin D\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setD,\n        placeholder: this.props.D,\n        value: this.props.D,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Calcium\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setCalcium,\n        placeholder: this.props.Calcium,\n        value: this.props.Calcium,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Iron\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setIron,\n        placeholder: this.props.Iron,\n        value: this.props.Iron,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Potassium\"), \" \", __jsx(TextField, {\n        className: \"inputfield\",\n        onChange: this.props.setPotassium,\n        placeholder: this.props.Potassium,\n        value: this.props.Potassium,\n        type: \"number\"\n      }))), __jsx(Button, null, \"Add product\"));\n    }\n  }]);\n\n  return Inputbox;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);","map":{"version":3,"sources":["/home/kole/fullStack/candu/pages/Inputbox.js"],"names":["React","Component","connect","setWeight","setCalories","setTotalFat","setSaturatedFat","setCholesterol","setTransFat","setSodium","setCarbohydrate","setFiber","setSugars","setAddedSugars","setProtein","setA","setC","setD","setCalcium","setIron","setPotassium","TextField","FormLayout","Form","bindActionCreators","mapStateToProps","state","Weight","inputReducer","Calories","TotalFat","SaturatedFat","TransFat","Cholesterol","Sodium","Carbohydrate","Fiber","Sugars","AddedSugars","Protein","A","C","D","Calcium","Iron","Potassium","mapDispatchToProps","dispatch","event","Inputbox","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    setWeight, setCalories, setTotalFat, setSaturatedFat, setCholesterol, setTransFat, setSodium,\n    setCarbohydrate, setFiber, setSugars, setAddedSugars, setProtein, setA, setC, setD,\n    setCalcium, setIron, setPotassium\n} from '../redux/ActionCreator';\n                <Button>Add product</Button>\n                import { TextField, FormLayout, Form,  } from '@shopify/polaris';\nimport { bindActionCreators } from \"redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        Weight: state.inputReducer.Weight,\n        Calories: state.inputReducer.Calories,\n        TotalFat: state.inputReducer.TotalFat,\n        SaturatedFat: state.inputReducer.SaturatedFat,\n        TransFat: state.inputReducer.TransFat,\n        Cholesterol: state.inputReducer.Cholesterol,\n        Sodium: state.inputReducer.Sodium,\n        Carbohydrate: state.inputReducer.Carbohydrate,\n        Fiber: state.inputReducer.Fiber,\n        Sugars: state.inputReducer.Sugars,\n        AddedSugars: state.inputReducer.AddedSugars,\n        Protein: state.inputReducer.Protein,\n        A: state.inputReducer.A,\n        C: state.inputReducer.C,\n        D: state.inputReducer.D,\n        Calcium: state.inputReducer.Calcium,\n        Iron: state.inputReducer.Iron,\n        Potassium: state.inputReducer.Potassium\n\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        setWeight: (event) => dispatch(setWeight(event)),\n        setCalories: (event) => dispatch(setCalories(event)),\n        setTotalFat: (event) => dispatch(setTotalFat(event)),\n        setSaturatedFat: (event) => dispatch(setSaturatedFat(event)),\n        setTransFat: (event) => dispatch(setTransFat(event)),\n        setCholesterol: (event) => dispatch(setCholesterol(event)),\n        setSodium: (event) => dispatch(setSodium(event)),\n        setCarbohydrate: (event) => dispatch(setCarbohydrate(event)),\n        setFiber: (event) => dispatch(setFiber(event)),\n        setSugars: (event) => dispatch(setSugars(event)),\n        setAddedSugars: (event) => dispatch(setAddedSugars(event)),\n        setProtein: (event) => dispatch(setProtein(event)),\n        setA: (event) => dispatch(setA(event)),\n        setC: (event) => dispatch(setC(event)),\n        setD: (event) => dispatch(setD(event)),\n        setCalcium: (event) => dispatch(setCalcium(event)),\n        setIron: (event) => dispatch(setIron(event)),\n        setPotassium: (event) => dispatch(setPotassium(event))\n    }, dispatch)\n}\n\n\nclass Inputbox extends Component {\n    \n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <FormLayout title='Vue Nutrition Label'>\n                <FormLayout.Group>\n                    <p><label>Serving Weight</label><TextField className='inputfield' onChange={this.props.setWeight} placeholder={this.props.Weight } value={this.props.Weight} type=\"number\"></TextField></p>\n                    <p><label>Calories</label><TextField className='inputfield' onChange={this.props.setCalories} placeholder={this.props.Calories} value={this.props.Calories} type=\"number\"></TextField></p>\n                    <p><label>Total Fat</label><TextField className='inputfield' onChange={this.props.setTotalFat} placeholder={this.props.TotalFat} value={this.props.TotalFat} type=\"number\"></TextField></p>\n                    <p><label>Saturated Fat</label><TextField className='inputfield' onChange={this.props.setSaturatedFat} placeholder={this.props.SaturatedFat} value={this.props.SaturatedFat} type=\"number\"></TextField></p>\n                    <p><label>Trans Fat</label> <TextField className='inputfield' onChange={this.props.setTransFat} placeholder={this.props.TransFat} value={this.props.TransFat} type=\"number\"></TextField></p>\n                    <p><label>Cholesterol</label> <TextField className='inputfield' onChange={this.props.setCholesterol} placeholder={this.props.Cholesterol} value={this.props.Cholesterol} type=\"number\"></TextField></p>\n                    <p><label>Sodium</label> <TextField className='inputfield' onChange={this.props.setSodium} placeholder={this.props.Sodium} value={this.props.Sodium} type=\"number\"></TextField></p>\n                    <p><label>Carbohydrate</label> <TextField className='inputfield' onChange={this.props.setCarbohydrate} placeholder={this.props.Carbohydrate} value={this.props.Carbohydrate} type=\"number\"></TextField></p>\n                    <p><label>Fiber</label> <TextField className='inputfield' onChange={this.props.setFiber} placeholder={this.props.Fiber} value={this.props.Fiber} type=\"number\"></TextField></p>\n                    <p><label>Sugars</label> <TextField className='inputfield' onChange={this.props.setSugars} placeholder={this.props.Sugars} value={this.props.Sugars} type=\"number\"></TextField></p>\n                    <p><label>Added Sugars</label> <TextField className='inputfield' onChange={this.props.setAddedSugars} placeholder={this.props.AddedSugars} value={this.props.AddedSugars} type=\"number\"></TextField></p>\n                    <p><label>Protein</label> <TextField className='inputfield' onChange={this.props.setProtein} placeholder={this.props.Protein} value={this.props.Protein} type=\"number\"></TextField></p>\n                    <p><label>Vitamin A</label> <TextField className='inputfield' onChange={this.props.setA} placeholder={this.props.A} value={this.props.A} type=\"number\"></TextField></p>\n                    <p><label>Vitamin C</label> <TextField className='inputfield' onChange={this.props.setC} placeholder={this.props.C} value={this.props.C} type=\"number\"></TextField></p>\n                    <p><label>Vitamin D</label> <TextField className='inputfield' onChange={this.props.setD} placeholder={this.props.D} value={this.props.D} type=\"number\"></TextField></p>\n                    <p><label>Calcium</label> <TextField className='inputfield' onChange={this.props.setCalcium} placeholder={this.props.Calcium} value={this.props.Calcium} type=\"number\"></TextField></p>\n                    <p><label>Iron</label> <TextField className='inputfield' onChange={this.props.setIron} placeholder={this.props.Iron} value={this.props.Iron} type=\"number\"></TextField></p>\n                    <p><label>Potassium</label> <TextField className='inputfield' onChange={this.props.setPotassium} placeholder={this.props.Potassium} value={this.props.Potassium} type=\"number\"></TextField></p>\n                </FormLayout.Group>\n\n                <Button>Add product</Button>\n            </FormLayout>\n\n        )\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);\n\n\n"]},"metadata":{},"sourceType":"module"}