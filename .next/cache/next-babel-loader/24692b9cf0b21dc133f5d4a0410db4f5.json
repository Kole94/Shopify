{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setWeight, setCalories, setTotalFat, setSaturatedFat, setCholesterol, setTransFat, setSodium, setCarbohydrate, setFiber, setSugars, setAddedSugars, setProtein, setA, setC, setD, setCalcium, setIron, setPotassium } from '../redux/ActionCreator';\nimport { TextField, FormLayout, Form, Button } from '@shopify/polaris';\nimport { bindActionCreators } from \"redux\";\n\nconst mapStateToProps = state => {\n  return {\n    Weight: state.inputReducer.Weight,\n    Calories: state.inputReducer.Calories,\n    TotalFat: state.inputReducer.TotalFat,\n    SaturatedFat: state.inputReducer.SaturatedFat,\n    TransFat: state.inputReducer.TransFat,\n    Cholesterol: state.inputReducer.Cholesterol,\n    Sodium: state.inputReducer.Sodium,\n    Carbohydrate: state.inputReducer.Carbohydrate,\n    Fiber: state.inputReducer.Fiber,\n    Sugars: state.inputReducer.Sugars,\n    AddedSugars: state.inputReducer.AddedSugars,\n    Protein: state.inputReducer.Protein,\n    A: state.inputReducer.A,\n    C: state.inputReducer.C,\n    D: state.inputReducer.D,\n    Calcium: state.inputReducer.Calcium,\n    Iron: state.inputReducer.Iron,\n    Potassium: state.inputReducer.Potassium\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    setWeight: event => dispatch(setWeight(event)),\n    setCalories: event => dispatch(setCalories(event)),\n    setTotalFat: event => dispatch(setTotalFat(event)),\n    setSaturatedFat: event => dispatch(setSaturatedFat(event)),\n    setTransFat: event => dispatch(setTransFat(event)),\n    setCholesterol: event => dispatch(setCholesterol(event)),\n    setSodium: event => dispatch(setSodium(event)),\n    setCarbohydrate: event => dispatch(setCarbohydrate(event)),\n    setFiber: event => dispatch(setFiber(event)),\n    setSugars: event => dispatch(setSugars(event)),\n    setAddedSugars: event => dispatch(setAddedSugars(event)),\n    setProtein: event => dispatch(setProtein(event)),\n    setA: event => dispatch(setA(event)),\n    setC: event => dispatch(setC(event)),\n    setD: event => dispatch(setD(event)),\n    setCalcium: event => dispatch(setCalcium(event)),\n    setIron: event => dispatch(setIron(event)),\n    setPotassium: event => dispatch(setPotassium(event))\n  }, dispatch);\n};\n\nclass Inputbox extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return __jsx(FormLayout, {\n      title: \"Vue Nutrition Label\"\n    }, __jsx(FormLayout.Group, null, __jsx(\"p\", null, __jsx(\"label\", null, \"Serving Weight\"), __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setWeight,\n      placeholder: this.props.Weight,\n      value: this.props.Weight,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Calories\"), __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setCalories,\n      placeholder: this.props.Calories,\n      value: this.props.Calories,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Total Fat\"), __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setTotalFat,\n      placeholder: this.props.TotalFat,\n      value: this.props.TotalFat,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Saturated Fat\"), __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setSaturatedFat,\n      placeholder: this.props.SaturatedFat,\n      value: this.props.SaturatedFat,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Trans Fat\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setTransFat,\n      placeholder: this.props.TransFat,\n      value: this.props.TransFat,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Cholesterol\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setCholesterol,\n      placeholder: this.props.Cholesterol,\n      value: this.props.Cholesterol,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Sodium\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setSodium,\n      placeholder: this.props.Sodium,\n      value: this.props.Sodium,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Carbohydrate\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setCarbohydrate,\n      placeholder: this.props.Carbohydrate,\n      value: this.props.Carbohydrate,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Fiber\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setFiber,\n      placeholder: this.props.Fiber,\n      value: this.props.Fiber,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Sugars\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setSugars,\n      placeholder: this.props.Sugars,\n      value: this.props.Sugars,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Added Sugars\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setAddedSugars,\n      placeholder: this.props.AddedSugars,\n      value: this.props.AddedSugars,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Protein\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setProtein,\n      placeholder: this.props.Protein,\n      value: this.props.Protein,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin A\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setA,\n      placeholder: this.props.A,\n      value: this.props.A,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin C\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setC,\n      placeholder: this.props.C,\n      value: this.props.C,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin D\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setD,\n      placeholder: this.props.D,\n      value: this.props.D,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Calcium\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setCalcium,\n      placeholder: this.props.Calcium,\n      value: this.props.Calcium,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Iron\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setIron,\n      placeholder: this.props.Iron,\n      value: this.props.Iron,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Potassium\"), \" \", __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setPotassium,\n      placeholder: this.props.Potassium,\n      value: this.props.Potassium,\n      type: \"number\"\n    }))), __jsx(Button, {\n      onClick: () => console.log('click')\n    }, \"Add product\"));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);","map":{"version":3,"sources":["/home/kole/fullStack/candu/pages/Inputbox.js"],"names":["React","Component","connect","setWeight","setCalories","setTotalFat","setSaturatedFat","setCholesterol","setTransFat","setSodium","setCarbohydrate","setFiber","setSugars","setAddedSugars","setProtein","setA","setC","setD","setCalcium","setIron","setPotassium","TextField","FormLayout","Form","Button","bindActionCreators","mapStateToProps","state","Weight","inputReducer","Calories","TotalFat","SaturatedFat","TransFat","Cholesterol","Sodium","Carbohydrate","Fiber","Sugars","AddedSugars","Protein","A","C","D","Calcium","Iron","Potassium","mapDispatchToProps","dispatch","event","Inputbox","constructor","props","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    setWeight, setCalories, setTotalFat, setSaturatedFat, setCholesterol, setTransFat, setSodium,\n    setCarbohydrate, setFiber, setSugars, setAddedSugars, setProtein, setA, setC, setD,\n    setCalcium, setIron, setPotassium\n} from '../redux/ActionCreator';\nimport { TextField, FormLayout, Form, Button } from '@shopify/polaris';\nimport { bindActionCreators } from \"redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        Weight: state.inputReducer.Weight,\n        Calories: state.inputReducer.Calories,\n        TotalFat: state.inputReducer.TotalFat,\n        SaturatedFat: state.inputReducer.SaturatedFat,\n        TransFat: state.inputReducer.TransFat,\n        Cholesterol: state.inputReducer.Cholesterol,\n        Sodium: state.inputReducer.Sodium,\n        Carbohydrate: state.inputReducer.Carbohydrate,\n        Fiber: state.inputReducer.Fiber,\n        Sugars: state.inputReducer.Sugars,\n        AddedSugars: state.inputReducer.AddedSugars,\n        Protein: state.inputReducer.Protein,\n        A: state.inputReducer.A,\n        C: state.inputReducer.C,\n        D: state.inputReducer.D,\n        Calcium: state.inputReducer.Calcium,\n        Iron: state.inputReducer.Iron,\n        Potassium: state.inputReducer.Potassium\n\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        setWeight: (event) => dispatch(setWeight(event)),\n        setCalories: (event) => dispatch(setCalories(event)),\n        setTotalFat: (event) => dispatch(setTotalFat(event)),\n        setSaturatedFat: (event) => dispatch(setSaturatedFat(event)),\n        setTransFat: (event) => dispatch(setTransFat(event)),\n        setCholesterol: (event) => dispatch(setCholesterol(event)),\n        setSodium: (event) => dispatch(setSodium(event)),\n        setCarbohydrate: (event) => dispatch(setCarbohydrate(event)),\n        setFiber: (event) => dispatch(setFiber(event)),\n        setSugars: (event) => dispatch(setSugars(event)),\n        setAddedSugars: (event) => dispatch(setAddedSugars(event)),\n        setProtein: (event) => dispatch(setProtein(event)),\n        setA: (event) => dispatch(setA(event)),\n        setC: (event) => dispatch(setC(event)),\n        setD: (event) => dispatch(setD(event)),\n        setCalcium: (event) => dispatch(setCalcium(event)),\n        setIron: (event) => dispatch(setIron(event)),\n        setPotassium: (event) => dispatch(setPotassium(event))\n    }, dispatch)\n}\n\n\nclass Inputbox extends Component {\n    \n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <FormLayout title='Vue Nutrition Label'>\n                <FormLayout.Group>\n                    <p><label>Serving Weight</label><TextField className='inputfield' onChange={this.props.setWeight} placeholder={this.props.Weight } value={this.props.Weight} type=\"number\"></TextField></p>\n                    <p><label>Calories</label><TextField className='inputfield' onChange={this.props.setCalories} placeholder={this.props.Calories} value={this.props.Calories} type=\"number\"></TextField></p>\n                    <p><label>Total Fat</label><TextField className='inputfield' onChange={this.props.setTotalFat} placeholder={this.props.TotalFat} value={this.props.TotalFat} type=\"number\"></TextField></p>\n                    <p><label>Saturated Fat</label><TextField className='inputfield' onChange={this.props.setSaturatedFat} placeholder={this.props.SaturatedFat} value={this.props.SaturatedFat} type=\"number\"></TextField></p>\n                    <p><label>Trans Fat</label> <TextField className='inputfield' onChange={this.props.setTransFat} placeholder={this.props.TransFat} value={this.props.TransFat} type=\"number\"></TextField></p>\n                    <p><label>Cholesterol</label> <TextField className='inputfield' onChange={this.props.setCholesterol} placeholder={this.props.Cholesterol} value={this.props.Cholesterol} type=\"number\"></TextField></p>\n                    <p><label>Sodium</label> <TextField className='inputfield' onChange={this.props.setSodium} placeholder={this.props.Sodium} value={this.props.Sodium} type=\"number\"></TextField></p>\n                    <p><label>Carbohydrate</label> <TextField className='inputfield' onChange={this.props.setCarbohydrate} placeholder={this.props.Carbohydrate} value={this.props.Carbohydrate} type=\"number\"></TextField></p>\n                    <p><label>Fiber</label> <TextField className='inputfield' onChange={this.props.setFiber} placeholder={this.props.Fiber} value={this.props.Fiber} type=\"number\"></TextField></p>\n                    <p><label>Sugars</label> <TextField className='inputfield' onChange={this.props.setSugars} placeholder={this.props.Sugars} value={this.props.Sugars} type=\"number\"></TextField></p>\n                    <p><label>Added Sugars</label> <TextField className='inputfield' onChange={this.props.setAddedSugars} placeholder={this.props.AddedSugars} value={this.props.AddedSugars} type=\"number\"></TextField></p>\n                    <p><label>Protein</label> <TextField className='inputfield' onChange={this.props.setProtein} placeholder={this.props.Protein} value={this.props.Protein} type=\"number\"></TextField></p>\n                    <p><label>Vitamin A</label> <TextField className='inputfield' onChange={this.props.setA} placeholder={this.props.A} value={this.props.A} type=\"number\"></TextField></p>\n                    <p><label>Vitamin C</label> <TextField className='inputfield' onChange={this.props.setC} placeholder={this.props.C} value={this.props.C} type=\"number\"></TextField></p>\n                    <p><label>Vitamin D</label> <TextField className='inputfield' onChange={this.props.setD} placeholder={this.props.D} value={this.props.D} type=\"number\"></TextField></p>\n                    <p><label>Calcium</label> <TextField className='inputfield' onChange={this.props.setCalcium} placeholder={this.props.Calcium} value={this.props.Calcium} type=\"number\"></TextField></p>\n                    <p><label>Iron</label> <TextField className='inputfield' onChange={this.props.setIron} placeholder={this.props.Iron} value={this.props.Iron} type=\"number\"></TextField></p>\n                    <p><label>Potassium</label> <TextField className='inputfield' onChange={this.props.setPotassium} placeholder={this.props.Potassium} value={this.props.Potassium} type=\"number\"></TextField></p>\n                </FormLayout.Group>\n\n                <Button onClick={()=>console.log('click')}>Add product</Button>\n            </FormLayout>\n\n        )\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);\n\n\n"]},"metadata":{},"sourceType":"module"}