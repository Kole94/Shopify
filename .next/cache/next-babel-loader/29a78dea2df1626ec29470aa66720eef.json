{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { ConfigureStore } from '../redux/configureStore';\nvar store = ConfigureStore();\nvar client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get(\"shopOrigin\"),\n        forceRedirect: true\n      };\n      return __jsx(React.Fragment, null, __jsx(ReduxProvider, {\n        store: store\n      }, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n        charSet: \"utf-8\"\n      })), __jsx(Provider, {\n        config: config\n      }, __jsx(AppProvider, {\n        i18n: translations\n      }, __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(Component, pageProps))))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/home/kole/fullStack/candu/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","Cookies","ApolloClient","ApolloProvider","ReduxProvider","ConfigureStore","store","client","fetchOptions","credentials","MyApp","props","Component","pageProps","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASJ,QAAQ,IAAIK,aAArB,QAA0C,aAA1C;AAEA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,IAAMC,KAAK,GAAGD,cAAc,EAA5B;AAEA,IAAME,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD;AADgB,CAAjB,CAAf;;IAMMC,K;;;;;;;;;;;;;6BACK;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAEP,UAAMC,MAAM,GAAG;AAAEC,QAAAA,MAAM,EAAEC,OAAV;AAAmBC,QAAAA,UAAU,EAAEhB,OAAO,CAACiB,GAAR,CAAY,YAAZ,CAA/B;AAA0DC,QAAAA,aAAa,EAAE;AAAzE,OAAf;AACA,aACE,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEb;AAAtB,SACA,MAAC,IAAD,QACE,kCADF,EAEE;AAAM,QAAA,OAAO,EAAC;AAAd,QAFF,CADA,EAKA,MAAC,QAAD;AAAU,QAAA,MAAM,EAAEQ;AAAlB,SACE,MAAC,WAAD;AAAa,QAAA,IAAI,EAAEd;AAAnB,SACA,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEO;AAAxB,SACE,MAAC,SAAD,EAAeM,SAAf,CADF,CADA,CADF,CALA,CADF,CADF;AAiBD;;;;EArBiBjB,G;;AAwBpB,eAAec,KAAf","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Provider as ReduxProvider } from 'react-redux';\n\nimport { ConfigureStore } from '../redux/configureStore';\n\nconst store = ConfigureStore();\n\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n});\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props;\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n    return (\n      <React.Fragment>\n        <ReduxProvider store={store}>\n        <Head>\n          <title>Sample App</title>\n          <meta charSet=\"utf-8\" />\n        </Head>\n        <Provider config={config}>\n          <AppProvider i18n={translations}>\n          <ApolloProvider client={client}>\n            <Component {...pageProps} />\n          </ApolloProvider>\n          </AppProvider>\n        </Provider>\n        </ReduxProvider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}