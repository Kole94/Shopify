{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setWeight, setCalories, setTotalFat, setSaturatedFat, setCholesterol, setTransFat, setSodium, setCarbohydrate, setFiber, setSugars, setAddedSugars, setProtein, setA, setC, setD, setCalcium, setIron, setPotassium } from '../redux/ActionCreator';\n\nconst mapStateToProps = state => {\n  return {\n    Weight: state.inputReducer.Weight,\n    Calories: state.inputReducer.Calories,\n    TotalFat: state.inputReducer.TotalFat,\n    SaturatedFat: state.inputReducer.SaturatedFat,\n    TransFat: state.inputReducer.TransFat,\n    Cholesterol: state.inputReducer.Cholesterol,\n    Sodium: state.inputReducer.Sodium,\n    Carbohydrate: state.inputReducer.Carbohydrate,\n    Fiber: state.inputReducer.Fiber,\n    Sugars: state.inputReducer.Sugars,\n    AddedSugars: state.inputReducer.AddedSugars,\n    Protein: state.inputReducer.Protein,\n    A: state.inputReducer.A,\n    C: state.inputReducer.C,\n    D: state.inputReducer.D,\n    Calcium: state.inputReducer.Calcium,\n    Iron: state.inputReducer.Iron,\n    Potassium: state.inputReducer.Potassium\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setWeight: event => dispatch(setWeight(event)),\n    setCalories: event => dispatch(setCalories(event)),\n    setTotalFat: event => dispatch(setTotalFat(event)),\n    setSaturatedFat: event => dispatch(setSaturatedFat(event)),\n    setTransFat: event => dispatch(setTransFat(event)),\n    setCholesterol: event => dispatch(setCholesterol(event)),\n    setSodium: event => dispatch(setSodium(event)),\n    setCarbohydrate: event => dispatch(setCarbohydrate(event)),\n    setFiber: event => dispatch(setFiber(event)),\n    setSugars: event => dispatch(setSugars(event)),\n    setAddedSugars: event => dispatch(setAddedSugars(event)),\n    setProtein: event => dispatch(setProtein(event)),\n    setA: event => dispatch(setA(event)),\n    setC: event => dispatch(setC(event)),\n    setD: event => dispatch(setD(event)),\n    setCalcium: event => dispatch(setCalcium(event)),\n    setIron: event => dispatch(setIron(event)),\n    setPotassium: event => dispatch(setPotassium(event))\n  };\n};\n\nclass Inputbox extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      console.log('comdidmount');\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"Inputbox\"\n    }, __jsx(\"form\", {\n      className: \"inputform\"\n    }, __jsx(\"p\", null, __jsx(\"label\", null, \"Serving Weight\"), __jsx(TextField, {\n      className: \"inputfield\",\n      onChange: this.props.setWeight,\n      value: this.props.Weight,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Calories\"), __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setCalories,\n      value: this.props.Calories,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Total Fat\"), __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setTotalFat,\n      value: this.props.TotalFat,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Saturated Fat\"), __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setSaturatedFat,\n      value: this.props.SaturatedFat,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Trans Fat\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setTransFat,\n      value: this.props.TransFat,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Cholesterol\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setCholesterol,\n      value: this.props.Cholesterol,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Sodium\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setSodium,\n      value: this.props.Sodium,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Carbohydrate\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setCarbohydrate,\n      value: this.props.Carbohydrate,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Fiber\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setFiber,\n      value: this.props.Fiber,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Sugars\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setSugars,\n      value: this.props.Sugars,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Added Sugars\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setAddedSugars,\n      value: this.props.AddedSugars,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Protein\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setProtein,\n      value: this.props.Protein,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin A\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setA,\n      value: this.props.A,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin C\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setC,\n      value: this.props.C,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin D\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setD,\n      value: this.props.D,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Calcium\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setCalcium,\n      value: this.props.Calcium,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Iron\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setIron,\n      value: this.props.Iron,\n      type: \"number\"\n    })), __jsx(\"p\", null, __jsx(\"label\", null, \"Potassium\"), \" \", __jsx(\"input\", {\n      className: \"inputfield\",\n      onChange: this.props.setPotassium,\n      value: this.props.Potassium,\n      type: \"number\"\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);","map":{"version":3,"sources":["/home/kole/fullStack/candu/pages/Inputbox.js"],"names":["React","Component","connect","setWeight","setCalories","setTotalFat","setSaturatedFat","setCholesterol","setTransFat","setSodium","setCarbohydrate","setFiber","setSugars","setAddedSugars","setProtein","setA","setC","setD","setCalcium","setIron","setPotassium","mapStateToProps","state","Weight","inputReducer","Calories","TotalFat","SaturatedFat","TransFat","Cholesterol","Sodium","Carbohydrate","Fiber","Sugars","AddedSugars","Protein","A","C","D","Calcium","Iron","Potassium","mapDispatchToProps","dispatch","event","Inputbox","constructor","props","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    setWeight, setCalories, setTotalFat, setSaturatedFat, setCholesterol, setTransFat, setSodium,\n    setCarbohydrate, setFiber, setSugars, setAddedSugars, setProtein, setA, setC, setD,\n    setCalcium, setIron, setPotassium\n} from '../redux/ActionCreator';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        Weight: state.inputReducer.Weight,\n        Calories: state.inputReducer.Calories,\n        TotalFat: state.inputReducer.TotalFat,\n        SaturatedFat: state.inputReducer.SaturatedFat,\n        TransFat: state.inputReducer.TransFat,\n        Cholesterol: state.inputReducer.Cholesterol,\n        Sodium: state.inputReducer.Sodium,\n        Carbohydrate: state.inputReducer.Carbohydrate,\n        Fiber: state.inputReducer.Fiber,\n        Sugars: state.inputReducer.Sugars,\n        AddedSugars: state.inputReducer.AddedSugars,\n        Protein: state.inputReducer.Protein,\n        A: state.inputReducer.A,\n        C: state.inputReducer.C,\n        D: state.inputReducer.D,\n        Calcium: state.inputReducer.Calcium,\n        Iron: state.inputReducer.Iron,\n        Potassium: state.inputReducer.Potassium\n\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setWeight: (event) => dispatch(setWeight(event)),\n        setCalories: (event) => dispatch(setCalories(event)),\n        setTotalFat: (event) => dispatch(setTotalFat(event)),\n        setSaturatedFat: (event) => dispatch(setSaturatedFat(event)),\n        setTransFat: (event) => dispatch(setTransFat(event)),\n        setCholesterol: (event) => dispatch(setCholesterol(event)),\n        setSodium: (event) => dispatch(setSodium(event)),\n        setCarbohydrate: (event) => dispatch(setCarbohydrate(event)),\n        setFiber: (event) => dispatch(setFiber(event)),\n        setSugars: (event) => dispatch(setSugars(event)),\n        setAddedSugars: (event) => dispatch(setAddedSugars(event)),\n        setProtein: (event) => dispatch(setProtein(event)),\n        setA: (event) => dispatch(setA(event)),\n        setC: (event) => dispatch(setC(event)),\n        setD: (event) => dispatch(setD(event)),\n        setCalcium: (event) => dispatch(setCalcium(event)),\n        setIron: (event) => dispatch(setIron(event)),\n        setPotassium: (event) => dispatch(setPotassium(event))\n    }\n}\n\n\nclass Inputbox extends Component {\n    \n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount = () => {\n        console.log('comdidmount')\n    }\n\n    render() {\n        return (\n            <div className='Inputbox'>\n                <form className='inputform'>\n                    <p><label>Serving Weight</label><TextField className='inputfield' onChange={this.props.setWeight} value={this.props.Weight} type=\"number\"></TextField></p>\n                    <p><label>Calories</label><input className='inputfield' onChange={this.props.setCalories} value={this.props.Calories} type=\"number\"></input></p>\n                    <p><label>Total Fat</label><input className='inputfield' onChange={this.props.setTotalFat} value={this.props.TotalFat} type=\"number\"></input></p>\n                    <p><label>Saturated Fat</label><input className='inputfield' onChange={this.props.setSaturatedFat} value={this.props.SaturatedFat} type=\"number\"></input></p>\n                    <p><label>Trans Fat</label> <input className='inputfield' onChange={this.props.setTransFat} value={this.props.TransFat} type=\"number\"></input></p>\n                    <p><label>Cholesterol</label> <input className='inputfield' onChange={this.props.setCholesterol} value={this.props.Cholesterol} type=\"number\"></input></p>\n                    <p><label>Sodium</label> <input className='inputfield' onChange={this.props.setSodium} value={this.props.Sodium} type=\"number\"></input></p>\n                    <p><label>Carbohydrate</label> <input className='inputfield' onChange={this.props.setCarbohydrate} value={this.props.Carbohydrate} type=\"number\"></input></p>\n                    <p><label>Fiber</label> <input className='inputfield' onChange={this.props.setFiber} value={this.props.Fiber} type=\"number\"></input></p>\n                    <p><label>Sugars</label> <input className='inputfield' onChange={this.props.setSugars} value={this.props.Sugars} type=\"number\"></input></p>\n                    <p><label>Added Sugars</label> <input className='inputfield' onChange={this.props.setAddedSugars} value={this.props.AddedSugars} type=\"number\"></input></p>\n                    <p><label>Protein</label> <input className='inputfield' onChange={this.props.setProtein} value={this.props.Protein} type=\"number\"></input></p>\n                    <p><label>Vitamin A</label> <input className='inputfield' onChange={this.props.setA} value={this.props.A} type=\"number\"></input></p>\n                    <p><label>Vitamin C</label> <input className='inputfield' onChange={this.props.setC} value={this.props.C} type=\"number\"></input></p>\n                    <p><label>Vitamin D</label> <input className='inputfield' onChange={this.props.setD} value={this.props.D} type=\"number\"></input></p>\n                    <p><label>Calcium</label> <input className='inputfield' onChange={this.props.setCalcium} value={this.props.Calcium} type=\"number\"></input></p>\n                    <p><label>Iron</label> <input className='inputfield' onChange={this.props.setIron} value={this.props.Iron} type=\"number\"></input></p>\n                    <p><label>Potassium</label> <input className='inputfield' onChange={this.props.setPotassium} value={this.props.Potassium} type=\"number\"></input></p>\n                </form>\n            </div>\n\n        )\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);\n\n\n"]},"metadata":{},"sourceType":"module"}