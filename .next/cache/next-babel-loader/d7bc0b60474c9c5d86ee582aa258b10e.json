{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setWeight as _setWeight, setCalories as _setCalories, setTotalFat as _setTotalFat, setSaturatedFat as _setSaturatedFat, setCholesterol as _setCholesterol, setTransFat as _setTransFat, setSodium as _setSodium, setCarbohydrate as _setCarbohydrate, setFiber as _setFiber, setSugars as _setSugars, setAddedSugars as _setAddedSugars, setProtein as _setProtein, setA as _setA, setC as _setC, setD as _setD, setCalcium as _setCalcium, setIron as _setIron, setPotassium as _setPotassium } from '../redux/ActionCreator';\nimport { input, FormLayout, Form, Button } from '@shopify/polaris';\nimport { bindActionCreators } from \"redux\";\nimport gql from 'graphql-tag';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    Weight: state.inputReducer.Weight,\n    Calories: state.inputReducer.Calories,\n    TotalFat: state.inputReducer.TotalFat,\n    SaturatedFat: state.inputReducer.SaturatedFat,\n    TransFat: state.inputReducer.TransFat,\n    Cholesterol: state.inputReducer.Cholesterol,\n    Sodium: state.inputReducer.Sodium,\n    Carbohydrate: state.inputReducer.Carbohydrate,\n    Fiber: state.inputReducer.Fiber,\n    Sugars: state.inputReducer.Sugars,\n    AddedSugars: state.inputReducer.AddedSugars,\n    Protein: state.inputReducer.Protein,\n    A: state.inputReducer.A,\n    C: state.inputReducer.C,\n    D: state.inputReducer.D,\n    Calcium: state.inputReducer.Calcium,\n    Iron: state.inputReducer.Iron,\n    Potassium: state.inputReducer.Potassium\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setWeight: function setWeight(event) {\n      return dispatch(_setWeight(event));\n    },\n    setCalories: function setCalories(event) {\n      return dispatch(_setCalories(event));\n    },\n    setTotalFat: function setTotalFat(event) {\n      return dispatch(_setTotalFat(event));\n    },\n    setSaturatedFat: function setSaturatedFat(event) {\n      return dispatch(_setSaturatedFat(event));\n    },\n    setTransFat: function setTransFat(event) {\n      return dispatch(_setTransFat(event));\n    },\n    setCholesterol: function setCholesterol(event) {\n      return dispatch(_setCholesterol(event));\n    },\n    setSodium: function setSodium(event) {\n      return dispatch(_setSodium(event));\n    },\n    setCarbohydrate: function setCarbohydrate(event) {\n      return dispatch(_setCarbohydrate(event));\n    },\n    setFiber: function setFiber(event) {\n      return dispatch(_setFiber(event));\n    },\n    setSugars: function setSugars(event) {\n      return dispatch(_setSugars(event));\n    },\n    setAddedSugars: function setAddedSugars(event) {\n      return dispatch(_setAddedSugars(event));\n    },\n    setProtein: function setProtein(event) {\n      return dispatch(_setProtein(event));\n    },\n    setA: function setA(event) {\n      return dispatch(_setA(event));\n    },\n    setC: function setC(event) {\n      return dispatch(_setC(event));\n    },\n    setD: function setD(event) {\n      return dispatch(_setD(event));\n    },\n    setCalcium: function setCalcium(event) {\n      return dispatch(_setCalcium(event));\n    },\n    setIron: function setIron(event) {\n      return dispatch(_setIron(event));\n    },\n    setPotassium: function setPotassium(event) {\n      return dispatch(_setPotassium(event));\n    }\n  }, dispatch);\n};\n\nvar Inputbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inputbox, _Component);\n\n  function Inputbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inputbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inputbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      productId: null\n    });\n\n    return _this;\n  }\n\n  _createClass(Inputbox, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.productId);\n      return __jsx(\"div\", {\n        title: \"Vue Nutrition Label\"\n      }, __jsx(\"form\", null, __jsx(\"p\", null, __jsx(\"label\", null, \"Serving Weight\"), __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setWeight,\n        placeholder: this.props.Weight,\n        value: this.props.Weight,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Calories\"), __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setCalories,\n        placeholder: this.props.Calories,\n        value: this.props.Calories,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Total Fat\"), __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setTotalFat,\n        placeholder: this.props.TotalFat,\n        value: this.props.TotalFat,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Saturated Fat\"), __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setSaturatedFat,\n        placeholder: this.props.SaturatedFat,\n        value: this.props.SaturatedFat,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Trans Fat\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setTransFat,\n        placeholder: this.props.TransFat,\n        value: this.props.TransFat,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Cholesterol\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setCholesterol,\n        placeholder: this.props.Cholesterol,\n        value: this.props.Cholesterol,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Sodium\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setSodium,\n        placeholder: this.props.Sodium,\n        value: this.props.Sodium,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Carbohydrate\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setCarbohydrate,\n        placeholder: this.props.Carbohydrate,\n        value: this.props.Carbohydrate,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Fiber\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setFiber,\n        placeholder: this.props.Fiber,\n        value: this.props.Fiber,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Sugars\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setSugars,\n        placeholder: this.props.Sugars,\n        value: this.props.Sugars,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Added Sugars\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setAddedSugars,\n        placeholder: this.props.AddedSugars,\n        value: this.props.AddedSugars,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Protein\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setProtein,\n        placeholder: this.props.Protein,\n        value: this.props.Protein,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin A\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setA,\n        placeholder: this.props.A,\n        value: this.props.A,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin C\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setC,\n        placeholder: this.props.C,\n        value: this.props.C,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Vitamin D\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setD,\n        placeholder: this.props.D,\n        value: this.props.D,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Calcium\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setCalcium,\n        placeholder: this.props.Calcium,\n        value: this.props.Calcium,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Iron\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setIron,\n        placeholder: this.props.Iron,\n        value: this.props.Iron,\n        type: \"number\"\n      })), __jsx(\"p\", null, __jsx(\"label\", null, \"Potassium\"), \" \", __jsx(\"input\", {\n        className: \"inputfield\",\n        onChange: this.props.setPotassium,\n        placeholder: this.props.Potassium,\n        value: this.props.Potassium,\n        type: \"number\"\n      }))));\n    }\n  }]);\n\n  return Inputbox;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);","map":{"version":3,"sources":["/home/kole/fullStack/candu/pages/Inputbox.js"],"names":["React","Component","connect","setWeight","setCalories","setTotalFat","setSaturatedFat","setCholesterol","setTransFat","setSodium","setCarbohydrate","setFiber","setSugars","setAddedSugars","setProtein","setA","setC","setD","setCalcium","setIron","setPotassium","input","FormLayout","Form","Button","bindActionCreators","gql","mapStateToProps","state","Weight","inputReducer","Calories","TotalFat","SaturatedFat","TransFat","Cholesterol","Sodium","Carbohydrate","Fiber","Sugars","AddedSugars","Protein","A","C","D","Calcium","Iron","Potassium","mapDispatchToProps","dispatch","event","Inputbox","productId","console","log","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,SAAS,IAATA,UADJ,EACeC,WAAW,IAAXA,YADf,EAC4BC,WAAW,IAAXA,YAD5B,EACyCC,eAAe,IAAfA,gBADzC,EAC0DC,cAAc,IAAdA,eAD1D,EAC0EC,WAAW,IAAXA,YAD1E,EACuFC,SAAS,IAATA,UADvF,EAEIC,eAAe,IAAfA,gBAFJ,EAEqBC,QAAQ,IAARA,SAFrB,EAE+BC,SAAS,IAATA,UAF/B,EAE0CC,cAAc,IAAdA,eAF1C,EAE0DC,UAAU,IAAVA,WAF1D,EAEsEC,IAAI,IAAJA,KAFtE,EAE4EC,IAAI,IAAJA,KAF5E,EAEkFC,IAAI,IAAJA,KAFlF,EAGIC,UAAU,IAAVA,WAHJ,EAGgBC,OAAO,IAAPA,QAHhB,EAGyBC,YAAY,IAAZA,aAHzB,QAIO,wBAJP;AAKA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,MAAlC,QAAgD,kBAAhD;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,YAAN,CAAmBD,MADxB;AAEHE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,YAAN,CAAmBC,QAF1B;AAGHC,IAAAA,QAAQ,EAAEJ,KAAK,CAACE,YAAN,CAAmBE,QAH1B;AAIHC,IAAAA,YAAY,EAAEL,KAAK,CAACE,YAAN,CAAmBG,YAJ9B;AAKHC,IAAAA,QAAQ,EAAEN,KAAK,CAACE,YAAN,CAAmBI,QAL1B;AAMHC,IAAAA,WAAW,EAAEP,KAAK,CAACE,YAAN,CAAmBK,WAN7B;AAOHC,IAAAA,MAAM,EAAER,KAAK,CAACE,YAAN,CAAmBM,MAPxB;AAQHC,IAAAA,YAAY,EAAET,KAAK,CAACE,YAAN,CAAmBO,YAR9B;AASHC,IAAAA,KAAK,EAAEV,KAAK,CAACE,YAAN,CAAmBQ,KATvB;AAUHC,IAAAA,MAAM,EAAEX,KAAK,CAACE,YAAN,CAAmBS,MAVxB;AAWHC,IAAAA,WAAW,EAAEZ,KAAK,CAACE,YAAN,CAAmBU,WAX7B;AAYHC,IAAAA,OAAO,EAAEb,KAAK,CAACE,YAAN,CAAmBW,OAZzB;AAaHC,IAAAA,CAAC,EAAEd,KAAK,CAACE,YAAN,CAAmBY,CAbnB;AAcHC,IAAAA,CAAC,EAAEf,KAAK,CAACE,YAAN,CAAmBa,CAdnB;AAeHC,IAAAA,CAAC,EAAEhB,KAAK,CAACE,YAAN,CAAmBc,CAfnB;AAgBHC,IAAAA,OAAO,EAAEjB,KAAK,CAACE,YAAN,CAAmBe,OAhBzB;AAiBHC,IAAAA,IAAI,EAAElB,KAAK,CAACE,YAAN,CAAmBgB,IAjBtB;AAkBHC,IAAAA,SAAS,EAAEnB,KAAK,CAACE,YAAN,CAAmBiB;AAlB3B,GAAP;AAqBH,CAtBD;;AAyBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAOxB,kBAAkB,CAAC;AACtBtB,IAAAA,SAAS,EAAE,mBAAC+C,KAAD;AAAA,aAAWD,QAAQ,CAAC9C,UAAS,CAAC+C,KAAD,CAAV,CAAnB;AAAA,KADW;AAEtB9C,IAAAA,WAAW,EAAE,qBAAC8C,KAAD;AAAA,aAAWD,QAAQ,CAAC7C,YAAW,CAAC8C,KAAD,CAAZ,CAAnB;AAAA,KAFS;AAGtB7C,IAAAA,WAAW,EAAE,qBAAC6C,KAAD;AAAA,aAAWD,QAAQ,CAAC5C,YAAW,CAAC6C,KAAD,CAAZ,CAAnB;AAAA,KAHS;AAItB5C,IAAAA,eAAe,EAAE,yBAAC4C,KAAD;AAAA,aAAWD,QAAQ,CAAC3C,gBAAe,CAAC4C,KAAD,CAAhB,CAAnB;AAAA,KAJK;AAKtB1C,IAAAA,WAAW,EAAE,qBAAC0C,KAAD;AAAA,aAAWD,QAAQ,CAACzC,YAAW,CAAC0C,KAAD,CAAZ,CAAnB;AAAA,KALS;AAMtB3C,IAAAA,cAAc,EAAE,wBAAC2C,KAAD;AAAA,aAAWD,QAAQ,CAAC1C,eAAc,CAAC2C,KAAD,CAAf,CAAnB;AAAA,KANM;AAOtBzC,IAAAA,SAAS,EAAE,mBAACyC,KAAD;AAAA,aAAWD,QAAQ,CAACxC,UAAS,CAACyC,KAAD,CAAV,CAAnB;AAAA,KAPW;AAQtBxC,IAAAA,eAAe,EAAE,yBAACwC,KAAD;AAAA,aAAWD,QAAQ,CAACvC,gBAAe,CAACwC,KAAD,CAAhB,CAAnB;AAAA,KARK;AAStBvC,IAAAA,QAAQ,EAAE,kBAACuC,KAAD;AAAA,aAAWD,QAAQ,CAACtC,SAAQ,CAACuC,KAAD,CAAT,CAAnB;AAAA,KATY;AAUtBtC,IAAAA,SAAS,EAAE,mBAACsC,KAAD;AAAA,aAAWD,QAAQ,CAACrC,UAAS,CAACsC,KAAD,CAAV,CAAnB;AAAA,KAVW;AAWtBrC,IAAAA,cAAc,EAAE,wBAACqC,KAAD;AAAA,aAAWD,QAAQ,CAACpC,eAAc,CAACqC,KAAD,CAAf,CAAnB;AAAA,KAXM;AAYtBpC,IAAAA,UAAU,EAAE,oBAACoC,KAAD;AAAA,aAAWD,QAAQ,CAACnC,WAAU,CAACoC,KAAD,CAAX,CAAnB;AAAA,KAZU;AAatBnC,IAAAA,IAAI,EAAE,cAACmC,KAAD;AAAA,aAAWD,QAAQ,CAAClC,KAAI,CAACmC,KAAD,CAAL,CAAnB;AAAA,KAbgB;AActBlC,IAAAA,IAAI,EAAE,cAACkC,KAAD;AAAA,aAAWD,QAAQ,CAACjC,KAAI,CAACkC,KAAD,CAAL,CAAnB;AAAA,KAdgB;AAetBjC,IAAAA,IAAI,EAAE,cAACiC,KAAD;AAAA,aAAWD,QAAQ,CAAChC,KAAI,CAACiC,KAAD,CAAL,CAAnB;AAAA,KAfgB;AAgBtBhC,IAAAA,UAAU,EAAE,oBAACgC,KAAD;AAAA,aAAWD,QAAQ,CAAC/B,WAAU,CAACgC,KAAD,CAAX,CAAnB;AAAA,KAhBU;AAiBtB/B,IAAAA,OAAO,EAAE,iBAAC+B,KAAD;AAAA,aAAWD,QAAQ,CAAC9B,QAAO,CAAC+B,KAAD,CAAR,CAAnB;AAAA,KAjBa;AAkBtB9B,IAAAA,YAAY,EAAE,sBAAC8B,KAAD;AAAA,aAAWD,QAAQ,CAAC7B,aAAY,CAAC8B,KAAD,CAAb,CAAnB;AAAA;AAlBQ,GAAD,EAmBtBD,QAnBsB,CAAzB;AAoBH,CArBD;;IAyBME,Q;;;;;;;;;;;;;;;;;;4DAGU;AACJC,MAAAA,SAAS,EAAE;AADP,K;;;;;;;6BAIH;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWwB,SAAvB;AACA,aACI;AAAK,QAAA,KAAK,EAAC;AAAX,SACI,oBACI,iBAAG,sCAAH,EAAgC;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWpD,SAAnD;AAA8D,QAAA,WAAW,EAAE,KAAKoD,KAAL,CAAW1B,MAAtF;AAA+F,QAAA,KAAK,EAAE,KAAK0B,KAAL,CAAW1B,MAAjH;AAAyH,QAAA,IAAI,EAAC;AAA9H,QAAhC,CADJ,EAEI,iBAAG,gCAAH,EAA0B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAK0B,KAAL,CAAWnD,WAAnD;AAAgE,QAAA,WAAW,EAAE,KAAKmD,KAAL,CAAWxB,QAAxF;AAAkG,QAAA,KAAK,EAAE,KAAKwB,KAAL,CAAWxB,QAApH;AAA8H,QAAA,IAAI,EAAC;AAAnI,QAA1B,CAFJ,EAGI,iBAAG,iCAAH,EAA2B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKwB,KAAL,CAAWlD,WAAnD;AAAgE,QAAA,WAAW,EAAE,KAAKkD,KAAL,CAAWvB,QAAxF;AAAkG,QAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWvB,QAApH;AAA8H,QAAA,IAAI,EAAC;AAAnI,QAA3B,CAHJ,EAII,iBAAG,qCAAH,EAA+B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKuB,KAAL,CAAWjD,eAAnD;AAAoE,QAAA,WAAW,EAAE,KAAKiD,KAAL,CAAWtB,YAA5F;AAA0G,QAAA,KAAK,EAAE,KAAKsB,KAAL,CAAWtB,YAA5H;AAA0I,QAAA,IAAI,EAAC;AAA/I,QAA/B,CAJJ,EAKI,iBAAG,iCAAH,OAA4B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKsB,KAAL,CAAW/C,WAAnD;AAAgE,QAAA,WAAW,EAAE,KAAK+C,KAAL,CAAWrB,QAAxF;AAAkG,QAAA,KAAK,EAAE,KAAKqB,KAAL,CAAWrB,QAApH;AAA8H,QAAA,IAAI,EAAC;AAAnI,QAA5B,CALJ,EAMI,iBAAG,mCAAH,OAA8B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKqB,KAAL,CAAWhD,cAAnD;AAAmE,QAAA,WAAW,EAAE,KAAKgD,KAAL,CAAWpB,WAA3F;AAAwG,QAAA,KAAK,EAAE,KAAKoB,KAAL,CAAWpB,WAA1H;AAAuI,QAAA,IAAI,EAAC;AAA5I,QAA9B,CANJ,EAOI,iBAAG,8BAAH,OAAyB;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKoB,KAAL,CAAW9C,SAAnD;AAA8D,QAAA,WAAW,EAAE,KAAK8C,KAAL,CAAWnB,MAAtF;AAA8F,QAAA,KAAK,EAAE,KAAKmB,KAAL,CAAWnB,MAAhH;AAAwH,QAAA,IAAI,EAAC;AAA7H,QAAzB,CAPJ,EAQI,iBAAG,oCAAH,OAA+B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAW7C,eAAnD;AAAoE,QAAA,WAAW,EAAE,KAAK6C,KAAL,CAAWlB,YAA5F;AAA0G,QAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWlB,YAA5H;AAA0I,QAAA,IAAI,EAAC;AAA/I,QAA/B,CARJ,EASI,iBAAG,6BAAH,OAAwB;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKkB,KAAL,CAAW5C,QAAnD;AAA6D,QAAA,WAAW,EAAE,KAAK4C,KAAL,CAAWjB,KAArF;AAA4F,QAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWjB,KAA9G;AAAqH,QAAA,IAAI,EAAC;AAA1H,QAAxB,CATJ,EAUI,iBAAG,8BAAH,OAAyB;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKiB,KAAL,CAAW3C,SAAnD;AAA8D,QAAA,WAAW,EAAE,KAAK2C,KAAL,CAAWhB,MAAtF;AAA8F,QAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWhB,MAAhH;AAAwH,QAAA,IAAI,EAAC;AAA7H,QAAzB,CAVJ,EAWI,iBAAG,oCAAH,OAA+B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAW1C,cAAnD;AAAmE,QAAA,WAAW,EAAE,KAAK0C,KAAL,CAAWf,WAA3F;AAAwG,QAAA,KAAK,EAAE,KAAKe,KAAL,CAAWf,WAA1H;AAAuI,QAAA,IAAI,EAAC;AAA5I,QAA/B,CAXJ,EAYI,iBAAG,+BAAH,OAA0B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWzC,UAAnD;AAA+D,QAAA,WAAW,EAAE,KAAKyC,KAAL,CAAWd,OAAvF;AAAgG,QAAA,KAAK,EAAE,KAAKc,KAAL,CAAWd,OAAlH;AAA2H,QAAA,IAAI,EAAC;AAAhI,QAA1B,CAZJ,EAaI,iBAAG,iCAAH,OAA4B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKc,KAAL,CAAWxC,IAAnD;AAAyD,QAAA,WAAW,EAAE,KAAKwC,KAAL,CAAWb,CAAjF;AAAoF,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWb,CAAtG;AAAyG,QAAA,IAAI,EAAC;AAA9G,QAA5B,CAbJ,EAcI,iBAAG,iCAAH,OAA4B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWvC,IAAnD;AAAyD,QAAA,WAAW,EAAE,KAAKuC,KAAL,CAAWZ,CAAjF;AAAoF,QAAA,KAAK,EAAE,KAAKY,KAAL,CAAWZ,CAAtG;AAAyG,QAAA,IAAI,EAAC;AAA9G,QAA5B,CAdJ,EAeI,iBAAG,iCAAH,OAA4B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKY,KAAL,CAAWtC,IAAnD;AAAyD,QAAA,WAAW,EAAE,KAAKsC,KAAL,CAAWX,CAAjF;AAAoF,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWX,CAAtG;AAAyG,QAAA,IAAI,EAAC;AAA9G,QAA5B,CAfJ,EAgBI,iBAAG,+BAAH,OAA0B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWrC,UAAnD;AAA+D,QAAA,WAAW,EAAE,KAAKqC,KAAL,CAAWV,OAAvF;AAAgG,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWV,OAAlH;AAA2H,QAAA,IAAI,EAAC;AAAhI,QAA1B,CAhBJ,EAiBI,iBAAG,4BAAH,OAAuB;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWpC,OAAnD;AAA4D,QAAA,WAAW,EAAE,KAAKoC,KAAL,CAAWT,IAApF;AAA0F,QAAA,KAAK,EAAE,KAAKS,KAAL,CAAWT,IAA5G;AAAkH,QAAA,IAAI,EAAC;AAAvH,QAAvB,CAjBJ,EAkBI,iBAAG,iCAAH,OAA4B;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWnC,YAAnD;AAAiE,QAAA,WAAW,EAAE,KAAKmC,KAAL,CAAWR,SAAzF;AAAoG,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWR,SAAtH;AAAiI,QAAA,IAAI,EAAC;AAAtI,QAA5B,CAlBJ,CADJ,CADJ;AAwBH;;;;EAlCkB9C,S;;AAsCvB,eAAeC,OAAO,CAACyB,eAAD,EAAkBqB,kBAAlB,CAAP,CAA6CG,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    setWeight, setCalories, setTotalFat, setSaturatedFat, setCholesterol, setTransFat, setSodium,\n    setCarbohydrate, setFiber, setSugars, setAddedSugars, setProtein, setA, setC, setD,\n    setCalcium, setIron, setPotassium\n} from '../redux/ActionCreator';\nimport { input, FormLayout, Form, Button } from '@shopify/polaris';\nimport { bindActionCreators } from \"redux\";\nimport gql from 'graphql-tag';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        Weight: state.inputReducer.Weight,\n        Calories: state.inputReducer.Calories,\n        TotalFat: state.inputReducer.TotalFat,\n        SaturatedFat: state.inputReducer.SaturatedFat,\n        TransFat: state.inputReducer.TransFat,\n        Cholesterol: state.inputReducer.Cholesterol,\n        Sodium: state.inputReducer.Sodium,\n        Carbohydrate: state.inputReducer.Carbohydrate,\n        Fiber: state.inputReducer.Fiber,\n        Sugars: state.inputReducer.Sugars,\n        AddedSugars: state.inputReducer.AddedSugars,\n        Protein: state.inputReducer.Protein,\n        A: state.inputReducer.A,\n        C: state.inputReducer.C,\n        D: state.inputReducer.D,\n        Calcium: state.inputReducer.Calcium,\n        Iron: state.inputReducer.Iron,\n        Potassium: state.inputReducer.Potassium\n\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        setWeight: (event) => dispatch(setWeight(event)),\n        setCalories: (event) => dispatch(setCalories(event)),\n        setTotalFat: (event) => dispatch(setTotalFat(event)),\n        setSaturatedFat: (event) => dispatch(setSaturatedFat(event)),\n        setTransFat: (event) => dispatch(setTransFat(event)),\n        setCholesterol: (event) => dispatch(setCholesterol(event)),\n        setSodium: (event) => dispatch(setSodium(event)),\n        setCarbohydrate: (event) => dispatch(setCarbohydrate(event)),\n        setFiber: (event) => dispatch(setFiber(event)),\n        setSugars: (event) => dispatch(setSugars(event)),\n        setAddedSugars: (event) => dispatch(setAddedSugars(event)),\n        setProtein: (event) => dispatch(setProtein(event)),\n        setA: (event) => dispatch(setA(event)),\n        setC: (event) => dispatch(setC(event)),\n        setD: (event) => dispatch(setD(event)),\n        setCalcium: (event) => dispatch(setCalcium(event)),\n        setIron: (event) => dispatch(setIron(event)),\n        setPotassium: (event) => dispatch(setPotassium(event))\n    }, dispatch)\n}\n\n  \n  \nclass Inputbox extends Component {\n    \n    \n        state = {\n            productId: null\n        };\n\n    render() {\n\n        console.log(this.state.productId);\n        return (\n            <div title='Vue Nutrition Label'>\n                <form>\n                    <p><label>Serving Weight</label><input className='inputfield' onChange={this.props.setWeight} placeholder={this.props.Weight } value={this.props.Weight} type=\"number\"></input></p>\n                    <p><label>Calories</label><input className='inputfield' onChange={this.props.setCalories} placeholder={this.props.Calories} value={this.props.Calories} type=\"number\"></input></p>\n                    <p><label>Total Fat</label><input className='inputfield' onChange={this.props.setTotalFat} placeholder={this.props.TotalFat} value={this.props.TotalFat} type=\"number\"></input></p>\n                    <p><label>Saturated Fat</label><input className='inputfield' onChange={this.props.setSaturatedFat} placeholder={this.props.SaturatedFat} value={this.props.SaturatedFat} type=\"number\"></input></p>\n                    <p><label>Trans Fat</label> <input className='inputfield' onChange={this.props.setTransFat} placeholder={this.props.TransFat} value={this.props.TransFat} type=\"number\"></input></p>\n                    <p><label>Cholesterol</label> <input className='inputfield' onChange={this.props.setCholesterol} placeholder={this.props.Cholesterol} value={this.props.Cholesterol} type=\"number\"></input></p>\n                    <p><label>Sodium</label> <input className='inputfield' onChange={this.props.setSodium} placeholder={this.props.Sodium} value={this.props.Sodium} type=\"number\"></input></p>\n                    <p><label>Carbohydrate</label> <input className='inputfield' onChange={this.props.setCarbohydrate} placeholder={this.props.Carbohydrate} value={this.props.Carbohydrate} type=\"number\"></input></p>\n                    <p><label>Fiber</label> <input className='inputfield' onChange={this.props.setFiber} placeholder={this.props.Fiber} value={this.props.Fiber} type=\"number\"></input></p>\n                    <p><label>Sugars</label> <input className='inputfield' onChange={this.props.setSugars} placeholder={this.props.Sugars} value={this.props.Sugars} type=\"number\"></input></p>\n                    <p><label>Added Sugars</label> <input className='inputfield' onChange={this.props.setAddedSugars} placeholder={this.props.AddedSugars} value={this.props.AddedSugars} type=\"number\"></input></p>\n                    <p><label>Protein</label> <input className='inputfield' onChange={this.props.setProtein} placeholder={this.props.Protein} value={this.props.Protein} type=\"number\"></input></p>\n                    <p><label>Vitamin A</label> <input className='inputfield' onChange={this.props.setA} placeholder={this.props.A} value={this.props.A} type=\"number\"></input></p>\n                    <p><label>Vitamin C</label> <input className='inputfield' onChange={this.props.setC} placeholder={this.props.C} value={this.props.C} type=\"number\"></input></p>\n                    <p><label>Vitamin D</label> <input className='inputfield' onChange={this.props.setD} placeholder={this.props.D} value={this.props.D} type=\"number\"></input></p>\n                    <p><label>Calcium</label> <input className='inputfield' onChange={this.props.setCalcium} placeholder={this.props.Calcium} value={this.props.Calcium} type=\"number\"></input></p>\n                    <p><label>Iron</label> <input className='inputfield' onChange={this.props.setIron} placeholder={this.props.Iron} value={this.props.Iron} type=\"number\"></input></p>\n                    <p><label>Potassium</label> <input className='inputfield' onChange={this.props.setPotassium} placeholder={this.props.Potassium} value={this.props.Potassium} type=\"number\"></input></p>\n                </form>\n              </div>\n        )\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);\n\n\n"]},"metadata":{},"sourceType":"module"}