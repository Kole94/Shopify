{"version":3,"file":"static/webpack/static/development/pages/Label.js.15e19888b8e11bdf3b94.hot-update.js","sources":["webpack:///./pages/Nutrition.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Button, Layout } from '@shopify/polaris';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        Weight: state.inputReducer.Weight,\n        Calories: state.inputReducer.Calories,\n        TotalFat: state.inputReducer.TotalFat,\n        SaturatedFat: state.inputReducer.SaturatedFat,\n        TransFat: state.inputReducer.TransFat,\n        Cholesterol: state.inputReducer.Cholesterol,\n        Sodium: state.inputReducer.Sodium,\n        Carbohydrate: state.inputReducer.Carbohydrate,\n        Fiber: state.inputReducer.Fiber,\n        Sugars: state.inputReducer.Sugars,\n        AddedSugars: state.inputReducer.AddedSugars,\n        Protein: state.inputReducer.Protein,\n        A: state.inputReducer.A,\n        C: state.inputReducer.C,\n        D: state.inputReducer.D,\n        Calcium: state.inputReducer.Calcium,\n        Iron: state.inputReducer.Iron,\n        Potassium: state.inputReducer.Potassium\n\n    }\n}\n\nclass Nutrition extends Component {\n\n    state = {\n        units: 1\n    }\n    render(){\n        return(\n<div className=\"Nutrition\">\n    <div itemtype=\"http://schema.org/NutritionInformation\" className=\"nf uk\">\n        <div className=\"nf-title\">Nutrition</div> \n        <table>\n            <thead>\n                <tr>\n                <th>Typical Values</th>\n                <th>Per 100g</th> \n        <th>\n            <input type=\"text\" data-role=\"none\" onChange={(event) => this.setState({units: event.target.value})}value={this.state.units} aria-label=\"Change the Quantity Textbox\"\n            className=\"nf-modifier-field\">\n            </input>\n            serving\n            \n              ({this.state.Weight})\n            </th> <th>%*({this.state.Weight})</th>\n            </tr>\n            </thead> \n            <tbody><tr><td>Energy</td> \n            <td> 1094kj</td> <td> 2189kj</td> \n            <td></td></tr> <tr><td></td> <td itemprop=\"calories\"> 262kcal</td> \n            <td itemprop=\"calories\"> 523kcal</td> <td> 26%</td></tr> <tr><td>Total Fat</td>\n             <td itemprop=\"fatContent\"> 24\n             <span aria-hidden=\"true\">g</span>\n             <span className=\"sr-only\"> grams</span></td> <td itemprop=\"fatContent\"> 49\n             <span aria-hidden=\"true\">g</span><span className=\"sr-only\"> grams</span></td> \n             <td> 70%</td></tr> <tr><td className=\"nf-indent\">Saturated Fat</td> \n             <td itemprop=\"saturatedFatContent\"> 35<span aria-hidden=\"true\">g</span>\n             <span className=\"sr-only\"> grams</span></td> <td itemprop=\"saturatedFatContent\"> 69\n             <span aria-hidden=\"true\">g</span><span className=\"sr-only\"> grams</span></td> \n             <td> 345%</td></tr> <tr><td>Carbohydrate</td> <td itemprop=\"carbohydrateContent\"> 3.8\n             <span aria-hidden=\"true\">g</span><span className=\"sr-only\"> grams</span></td> \n             <td itemprop=\"carbohydrateContent\"> 7.6<span aria-hidden=\"true\">g</span>\n             <span className=\"sr-only\"> grams</span></td> <td> 3%</td></tr> <tr>\n                 <td className=\"nf-indent\">Sugars</td> <td itemprop=\"sugarContent\"> 11\n                 <span aria-hidden=\"true\">g</span><span className=\"sr-only\"> grams</span></td>\n                  <td itemprop=\"sugarContent\"> 23<span aria-hidden=\"true\">g</span>\n                  <span className=\"sr-only\"> grams</span></td> <td> 26%</td></tr> \n                  <tr><td>Fibre</td> <td itemprop=\"fiberContent\">{this.state.units*Math.round((this.props.Fiber/2)* 10 ) / 10}<span aria-hidden=\"true\">g</span>\n                  <span className=\"sr-only\"> grams</span></td> <td itemprop=\"fiberContent\"> {Math.floor(this.props.Fiber)}\n                  <span aria-hidden=\"true\">g</span><span className=\"sr-only\"> grams</span></td> \n                  <td></td></tr> <tr><td>Protein</td> <td itemprop=\"proteinContent\">{this.state.units*Math.floor(this.props.Protein/2)}\n                  <span aria-hidden=\"true\">g</span><span className=\"sr-only\"> grams</span></td> \n                  <td itemprop=\"proteinContent\">{this.state.units*Math.floor(this.props.Protein)}<span aria-hidden=\"true\">g</span>\n        <span className=\"sr-only\"> grams</span></td> <td> {78 + Math.floor(this.props.Protein - 38)*2}%</td></tr> \n                  <tr><td>Salt</td> <td itemprop=\"sodiumContent\"> 0.98<span aria-hidden=\"true\">g</span>\n                  <span className=\"sr-only\">grams</span></td> <td itemprop=\"sodiumContent\"> 2\n                  <span aria-hidden=\"true\">g</span><span className=\"sr-only\">grams</span></td> \n                  <td> 33%</td></tr></tbody> <tfoot><tr><td colspan=\"4\">\n                      <span>* Reference intake of an average adult (8400kj/2000kcal)</span> \n                      <div className=\"nf-ingredient-statement\"><strong>Ingredients:</strong>\n                       <div>Swiss cheese, American cheese, more cheese and a burger.</div></div> \n                       <div className=\"nf-disclaimer\">Disclaimer</div></td></tr></tfoot>\n                       </table>\n                       </div>\n                       </div>\n        )\n    }\n}\n\n\nexport default connect(mapStateToProps)(Nutrition);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAqBA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AADA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAKA;;;;AAhEA;AACA;AAmEA;;;;A","sourceRoot":""}