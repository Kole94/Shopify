{"version":3,"file":"static/webpack/static/development/pages/Label.js.e44121d8725ae5632df6.hot-update.js","sources":["webpack:///./pages/Inputbox.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    setWeight, setCalories, setTotalFat, setSaturatedFat, setCholesterol, setTransFat, setSodium,\n    setCarbohydrate, setFiber, setSugars, setAddedSugars, setProtein, setA, setC, setD,\n    setCalcium, setIron, setPotassium\n} from '../redux/ActionCreator';\nimport { TextField, FormLayout, Form } from '@shopify/polaris';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        Weight: state.inputReducer.Weight,\n        Calories: state.inputReducer.Calories,\n        TotalFat: state.inputReducer.TotalFat,\n        SaturatedFat: state.inputReducer.SaturatedFat,\n        TransFat: state.inputReducer.TransFat,\n        Cholesterol: state.inputReducer.Cholesterol,\n        Sodium: state.inputReducer.Sodium,\n        Carbohydrate: state.inputReducer.Carbohydrate,\n        Fiber: state.inputReducer.Fiber,\n        Sugars: state.inputReducer.Sugars,\n        AddedSugars: state.inputReducer.AddedSugars,\n        Protein: state.inputReducer.Protein,\n        A: state.inputReducer.A,\n        C: state.inputReducer.C,\n        D: state.inputReducer.D,\n        Calcium: state.inputReducer.Calcium,\n        Iron: state.inputReducer.Iron,\n        Potassium: state.inputReducer.Potassium\n\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setWeight: (event) => dispatch(setWeight(event)),\n        setCalories: (event) => dispatch(setCalories(event)),\n        setTotalFat: (event) => dispatch(setTotalFat(event)),\n        setSaturatedFat: (event) => dispatch(setSaturatedFat(event)),\n        setTransFat: (event) => dispatch(setTransFat(event)),\n        setCholesterol: (event) => dispatch(setCholesterol(event)),\n        setSodium: (event) => dispatch(setSodium(event)),\n        setCarbohydrate: (event) => dispatch(setCarbohydrate(event)),\n        setFiber: (event) => dispatch(setFiber(event)),\n        setSugars: (event) => dispatch(setSugars(event)),\n        setAddedSugars: (event) => dispatch(setAddedSugars(event)),\n        setProtein: (event) => dispatch(setProtein(event)),\n        setA: (event) => dispatch(setA(event)),\n        setC: (event) => dispatch(setC(event)),\n        setD: (event) => dispatch(setD(event)),\n        setCalcium: (event) => dispatch(setCalcium(event)),\n        setIron: (event) => dispatch(setIron(event)),\n        setPotassium: (event) => dispatch(setPotassium(event))\n    }\n}\n\n\nclass Inputbox extends Component {\n    \n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount = () => {\n        console.log('comdidmount')\n    }\n\n    render() {\n        return (\n            <Form className='Inputbox'>\n                <FormLayout className='inputform'>\n                    <p><label>Serving Weight</label><TextField className='inputfield' onChange={this.props.setWeight} value={this.props.Weight} type=\"number\"></TextField></p>\n                    <p><label>Calories</label><TextField className='inputfield' onChange={this.props.setCalories} value={this.props.Calories} type=\"number\"></TextField></p>\n                    <p><label>Total Fat</label><TextField className='inputfield' onChange={this.props.setTotalFat} value={this.props.TotalFat} type=\"number\"></TextField></p>\n                    <p><label>Saturated Fat</label><TextField className='inputfield' onChange={this.props.setSaturatedFat} value={this.props.SaturatedFat} type=\"number\"></TextField></p>\n                    <p><label>Trans Fat</label> <TextField className='inputfield' onChange={this.props.setTransFat} value={this.props.TransFat} type=\"number\"></TextField></p>\n                    <p><label>Cholesterol</label> <TextField className='inputfield' onChange={this.props.setCholesterol} value={this.props.Cholesterol} type=\"number\"></TextField></p>\n                    <p><label>Sodium</label> <TextField className='inputfield' onChange={this.props.setSodium} value={this.props.Sodium} type=\"number\"></TextField></p>\n                    <p><label>Carbohydrate</label> <TextField className='inputfield' onChange={this.props.setCarbohydrate} value={this.props.Carbohydrate} type=\"number\"></TextField></p>\n                    <p><label>Fiber</label> <TextField className='inputfield' onChange={this.props.setFiber} value={this.props.Fiber} type=\"number\"></TextField></p>\n                    <p><label>Sugars</label> <TextField className='inputfield' onChange={this.props.setSugars} value={this.props.Sugars} type=\"number\"></TextField></p>\n                    <p><label>Added Sugars</label> <TextField className='inputfield' onChange={this.props.setAddedSugars} value={this.props.AddedSugars} type=\"number\"></TextField></p>\n                    <p><label>Protein</label> <TextField className='inputfield' onChange={this.props.setProtein} value={this.props.Protein} type=\"number\"></TextField></p>\n                    <p><label>Vitamin A</label> <TextField className='inputfield' onChange={this.props.setA} value={this.props.A} type=\"number\"></TextField></p>\n                    <p><label>Vitamin C</label> <TextField className='inputfield' onChange={this.props.setC} value={this.props.C} type=\"number\"></TextField></p>\n                    <p><label>Vitamin D</label> <TextField className='inputfield' onChange={this.props.setD} value={this.props.D} type=\"number\"></TextField></p>\n                    <p><label>Calcium</label> <TextField className='inputfield' onChange={this.props.setCalcium} value={this.props.Calcium} type=\"number\"></TextField></p>\n                    <p><label>Iron</label> <TextField className='inputfield' onChange={this.props.setIron} value={this.props.Iron} type=\"number\"></TextField></p>\n                    <p><label>Potassium</label> <TextField className='inputfield' onChange={this.props.setPotassium} value={this.props.Potassium} type=\"number\"></TextField></p>\n                </FormLayout>\n            </Form>\n\n        )\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputbox);\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAqBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAlBA;AAoBA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AAPA;AAEA;AACA;;;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AApCA;AACA;AAuCA;;;;A","sourceRoot":""}