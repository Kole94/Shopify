{"version":3,"file":"static/webpack/static/development/pages/index.js.a651ab95ac83dde7469f.hot-update.js","sources":["webpack:///./components/ResourceList.js","webpack:///./pages/index.js"],"sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    console.log( store.get('ids'));\n    return (\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n        {({ data, loading, error }) => {\n          if (loading) return <div>Loadingâ€¦</div>;\n          if (error) return <div>{error.message}</div>;\n          console.log(data);\n          return (\n            <Card>\n              <p>stuff here</p>\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\n export default ResourceListWithProducts;","import { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar} from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  state = { open: false };\n\n  saveData(){\n      let query = {\n        query:\n        `mutation {\n        createProduct(productInput: {\n          title:\"wadwa\"\n          price:99\n        }){\n          price\n      }}`};\n      fetch('https://b61cbbeb.ngrok.io/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(query),\n      })\n        .then(resData => {\n          console.log('wads');\n        })\n        .catch(err => {\n          console.log('skoadks')\n          console.log(JSON.stringify(err, null, 2));\n        });\n    }\n  render() {\n\n\n    const emptyState = !store.get('ids');\n    return (\n      <Page>\n        <TitleBar\n          primaryAction={{\n            content: 'Select products',\n            onAction: () => this.setState({ open: true }),\n          }}\n        />\n        <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n        {emptyState ? (\n          <Layout>\n            <EmptyState\n              heading=\"Select products to start\"\n              action={{\n                content: 'Select products',\n                onAction: () => this.setState({ open: true })\n              }}\n              image={img}\n            >\n              <p>Select products and change their price temporarily</p>\n            </EmptyState>\n          </Layout>\n        ) : (\n            <ResourceListWithProducts />\n        )}\n        <button onClick={()=> this.saveData()}></button>\n\n      </Page>\n    );\n  }\n  handleSelection = (resources) => {\n    const idsFromResources = resources.selection.map((product) => product.id);\n    this.setState({ open: false });\n    store.set('ids', idsFromResources);\n  };\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;AAEA;AACA;AA4BA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAGA;;;;AAlBA;AACA;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAoEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAxEA;AACA;AACA;AADA;AASA;AACA;AACA;AACA;AAEA;AAHA;AAKA;AAPA;AAUA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AANA;AAcA;AAAA;AAAA;AAAA;AAIA;;;;AArEA;AACA;AA4EA;;;;A","sourceRoot":""}